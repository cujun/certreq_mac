/* Generated by IDL compiler version FreeDCE 1.1.0.7 with GNU Flex/Bison */
#ifndef pickle_v0_0_included
#define pickle_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>
#include <dce/idl_es.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef sec_id_base_v0_0_included
#include <dce/id_base.h>
#endif
extern void sec__id_pac_format_v1_pickle(
    /* [in] */ idl_es_handle_t handle,
    /* [in] */ sec_id_pac_format_v1_t *pac,
    /* [out] */ error_status_t *st
);
extern void sec__id_pac_format_v1_unpickle(
    /* [in] */ idl_es_handle_t handle,
    /* [out] */ sec_id_pac_format_v1_t *pac,
    /* [out] */ error_status_t *st
);
extern void sec__id_pac_pickle(
    /* [in] */ idl_es_handle_t handle,
    /* [in] */ sec_id_pac_t *pac,
    /* [out] */ error_status_t *st
);
extern void sec__id_pac_unpickle(
    /* [in] */ idl_es_handle_t handle,
    /* [out] */ sec_id_pac_t *pac,
    /* [out] */ error_status_t *st
);
typedef struct pickle_v0_0_epv_t {
	void (*sec__id_pac_format_v1_pickle)(
    /* [in] */ idl_es_handle_t handle,
    /* [in] */ sec_id_pac_format_v1_t *pac,
    /* [out] */ error_status_t *st
);
	void (*sec__id_pac_format_v1_unpickle)(
    /* [in] */ idl_es_handle_t handle,
    /* [out] */ sec_id_pac_format_v1_t *pac,
    /* [out] */ error_status_t *st
);
	void (*sec__id_pac_pickle)(
    /* [in] */ idl_es_handle_t handle,
    /* [in] */ sec_id_pac_t *pac,
    /* [out] */ error_status_t *st
);
	void (*sec__id_pac_unpickle)(
    /* [in] */ idl_es_handle_t handle,
    /* [out] */ sec_id_pac_t *pac,
    /* [out] */ error_status_t *st
);
} pickle_v0_0_epv_t;
extern rpc_if_handle_t pickle_v0_0_c_ifspec;
extern rpc_if_handle_t pickle_v0_0_s_ifspec;

#ifdef __cplusplus
    }
#endif

#endif
